---
- name: Disabling Swap on all nodes
  shell: /sbin/swapoff -a
  with_inventory_hostnames:
    - nodes 

- name: Commenting Swap entries in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '(.*swap*)'
    replace: '#\1'
  with_inventory_hostnames: 
    - nodes

- name: install docker and other dependencies
  yum: name={{ item }} state=present
  loop:
   - "{{ packages }}"


- name: Load kernel modules for RKE
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ kernel_modules }}"

- name: Modify sysctl entries
  sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
  loop:
    - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
    - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
    - {key: net.ipv4.ip_forward,  value: 1}

- name: Disable PermitTunnel and AllowTcpForwarding
  lineinfile:
    dest=/etc/ssh/sshd_config
    state=present
    regexp=^{{ item.key }}
    line="{{ item.key }} {{ item.value }}"
    insertafter=EOF
  loop:
    - { key: 'PermitTunnel', value: 'no' }
    - { key: 'AllowTcpForwarding', value: 'yes' }
  notify: restart sshd

- name: install rancher docker 
  shell: curl https://releases.rancher.com/install-docker/19.03.sh | sh 

- name: install epel repo
  yum: name=epel-release state=present 

- name: install the package, force upgrade
  pip:
    name: "{{ item }}"
    state: latest
  loop: "{{ pip_modules }}"

- name: add kubernetes repo
  yum_repository:
    name: kubernetes
    description: Kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: no
    sslverify: no
    enabled: true

- name: YUM Update
  yum:
    name:  "*"
    state: latest
  register: yum_updates

- debug:
    var: yum_updates.changes.updated

- name: Start docker service
  shell: systemctl daemon-reload && systemctl enable docker && systemctl restart docker

- name: adding existing user "{{ ansible_user }}" to group docker 
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Starting and Enabling the required services
  service:
   name: "{{ item }}"
   state: started
   enabled: yes
  loop: "{{ services }}"

- name: open ports noedes
  firewalld:
    port: "{{item}}"
    permanent: true
    state: enabled
  loop: "{{ sys_ports }}"
  
- name: Enable IP masquerading
  shell: "firewall-cmd --permanent --zone={{ network_zone }} --add-masquerade"

- name: reload firewalld
  shell: firewall-cmd --reload

- name: Pull an image
  docker_image:
    name: "{{ item }}"  
  loop: 
    - "{{ docker_images }}"


- name: Reboot "{{ ansible_hostname }}"  
  reboot:
    when: '"kernel" in yum_updates.changes.updated'
